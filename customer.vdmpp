
class Customer
instance variables
    private name: seq of char;
    private address: seq of char;
    private customerId: nat;
    private accounts : set of Account;
operations
    public Customer: seq of char * seq of char * nat ==> Customer
    Customer(n,add,id) == (
        name := n;
        address := add;
        customerId := id;
        accounts := {};
    );
    --getters/setters
    public getCustomerId: () ==> nat
    getCustomerId() == (return customerId);
    public getName: () ==> seq of char
    getName() == (return name);
    public getAddress: () ==> seq of char
    getAddress() == (return address);
    public getAccs: () ==> set of Account
    getAccs() == (
        return accounts;
    );
    public addAccount: Account ==> ()
    addAccount(newAcc) == (
        accounts := accounts union {newAcc};
    );
    public removeAccount: Account ==> ()
    removeAccount(rmvAcc) == (
        accounts := accounts \ {rmvAcc};
    );
end Customer
